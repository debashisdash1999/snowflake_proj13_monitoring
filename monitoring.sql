--  TASK 1 : Snowflake History and Warehouse Usage
SELECT 
  *
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY 
LIMIT 10;


SELECT 
    WAREHOUSE_NAME, 
    AVG(CREDITS_USED) AS AVERAGE_CREDITS_USED, 
    COUNT(*) AS TOTAL_QUERIES
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.WAREHOUSE_METERING_HISTORY 
WHERE 
    START_TIME >= DATEADD('DAY', -1, CURRENT_TIMESTAMP()) 
GROUP BY 
    WAREHOUSE_NAME 
ORDER BY 
    AVERAGE_CREDITS_USED DESC 
LIMIT 10;



--  TASK 2 : Snowflake Query Activity and Query Execution Details
SELECT 
    USER_NAME, 
    COUNT(*) AS QUERY_COUNT 
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY 
WHERE 
    CURRENT_TIMESTAMP >= DATEADD('DAY', -1, CURRENT_TIMESTAMP()) 
GROUP BY 
    USER_NAME 
ORDER BY 
    QUERY_COUNT DESC 
LIMIT 10;


SELECT 
    QUERY_ID, 
    USER_NAME, 
    WAREHOUSE_NAME, 
    EXECUTION_STATUS, 
    EXECUTION_TIME, 
    ROWS_PRODUCED 
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY 
WHERE 
    EXECUTION_STATUS = 'SUCCESS' 
    AND CURRENT_TIMESTAMP >= DATEADD('DAY', -1, CURRENT_TIMESTAMP()) 
ORDER BY 
    EXECUTION_TIME DESC 
LIMIT 10;



--  TASK 3 : Snowflake Failed Queries and Warehouse Credits Usage
SELECT 
    QUERY_ID, 
    USER_NAME, 
    WAREHOUSE_NAME, 
    ERROR_MESSAGE,  
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY 
WHERE 
    EXECUTION_STATUS = 'FAILED';


--Credits Used
SELECT * FROM "SNOWFLAKE"."ACCOUNT_USAGE"."WAREHOUSE_METERING_HISTORY";



--  TASK 4 : Snowflake Warehouse Load and Database Storage Usage
SELECT 
    WAREHOUSE_NAME, 
    AVG_QUEUED_PROVISIONING,
    AVG_QUEUED_LOAD
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.WAREHOUSE_LOAD_HISTORY 
WHERE 
    START_TIME >= DATEADD('DAY', -1, CURRENT_TIMESTAMP()) 
ORDER BY 
    START_TIME DESC;

    
SELECT 
    DATABASE_NAME, 
    SUM(AVERAGE_DATABASE_BYTES) AS TOTAL_STORAGE_BYTES 
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.DATABASE_STORAGE_USAGE_HISTORY 
GROUP BY 
    DATABASE_NAME 
ORDER BY 
    TOTAL_STORAGE_BYTES DESC;

    

--  TASK 5 : Snowflake Query Execution Time and Role Grants
SELECT 
    USER_NAME, 
    AVG(EXECUTION_TIME) AS AVERAGE_EXECUTION_TIME 
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY 
WHERE 
    CURRENT_TIMESTAMP >= DATEADD('DAY', -1, CURRENT_TIMESTAMP()) 
GROUP BY 
    USER_NAME 
ORDER BY 
    AVERAGE_EXECUTION_TIME DESC 
LIMIT 10;


SELECT 
    ROLE, 
    GRANTEE_NAME 
FROM 
    SNOWFLAKE.ACCOUNT_USAGE.GRANTS_TO_USERS 
ORDER BY 
    ROLE;
